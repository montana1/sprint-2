version: '3.7'
services:

  configSrv:
    image: mongo:latest # docker образ
    container_name: configSrv 
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command: mongod --configsvr --replSet config_server --bind_ip_all --port 27017
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1-data:/data/db
    command: mongod --shardsvr --replSet shard1 --bind_ip_all --port 27018
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1r2:
    image: mongo:latest
    container_name: shard1r2
    restart: always
    ports:
      - "27028:27028"
    networks:
      app-network:
        ipv4_address: 173.17.0.19
    volumes:
      - shard1r2-data:/data/db
    command: mongod --shardsvr --replSet shard1 --bind_ip_all --port 27028
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shardr3:
    image: mongo:latest
    container_name: shard1r3
    restart: always
    ports:
      - "27038:27038"
    networks:
      app-network:
        ipv4_address: 173.17.0.29
    volumes:
      - shard1r3-data:/data/db
    command: mongod --shardsvr --replSet shard1 --bind_ip_all --port 27038
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s



  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2-data:/data/db
    command: mongod --shardsvr --replSet shard2 --bind_ip_all --port 27019
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2r2:
    image: mongo:latest
    container_name: shard2r2
    restart: always
    ports:
      - "27029:27029"
    networks:
      app-network:
        ipv4_address: 173.17.0.28
    volumes:
      - shard2r2-data:/data/db
    command: mongod --shardsvr --replSet shard2 --bind_ip_all --port 27029
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2r3:
    image: mongo:latest
    container_name: shard2r3
    restart: always
    ports:
      - "27039:27039"
    networks:
      app-network:
        ipv4_address: 173.17.0.38
    volumes:
      - shard2r3-data:/data/db
    command: mongod --shardsvr --replSet shard2 --bind_ip_all --port 27039
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command: mongos --configdb config_server/configSrv:27017 --bind_ip_all --port 27020
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s


  pymongo_api:
    container_name: mongo-sharding-repl
    build:
      context: app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16


volumes:
  config-data:
  shard1-data:
  shard1r2-data:
  shard1r3-data: 
  shard2-data:
  shard2r2-data:
  shard2r3-data:
